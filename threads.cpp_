#include <iostream>
#include <thread>
#include <vector>

int main() {

  const std::vector<std::string> files{
      "file0.txt",
      "file1.txt",
      "file2.txt",
      "file3.txt",
      "file4.txt",
      "file5.txt",
      "file6.txt",
      "file7.txt",
  };

  std::vector<std::thread> threads;

   const unsigned max_threads = std::thread::hardware_concurrency();

  for (auto file = files.cbegin(); file < files.cend();) {
    for (auto i = 0UL; i < max_threads; ++i) {

      threads.push_back(std::thread(
          [](const auto &f) { std::cout << "\t" << f << " lambda\n"; }, file));

      threads.back().join();
      if (++file >= files.cend())
        break;
    }

    std::cout << threads.size() << " threads cleared\n";
    threads.clear();
  }
}
